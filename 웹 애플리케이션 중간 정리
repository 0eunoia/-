이제 우리 수업 중반쯤 접어 들어서 여러분들에게 일종의 정리 도는 뭐 약간의 진조의 진로를 결정하는 부분에서의 고민들 그런 것들을 제가 예상해 보고 설명을 좀 해드리려고 이런 시간에 마련해 봤습니다.



우선 웹이 출현하고 제일 먼저 등장한 기술이 뭐였나요?

HTML 됩니다 HTML이 등장한 그 시점에 HTML을 제외한 어떠한 기술도 존재하지 않았습니다.

그 얘기는 뭐냐 바로 이 HtML 이 웹이라고 하는 분야에 씨앗과 같은 핵심에 놓여 있는 기술이 HTML이라는 겁니다.



쉽지만 너무 너무나 중요한 그래서 당연히 HTML이 가장 공부하기 좋은 기술인 것을 잊지 말아 주시고요.

그다음에 HTML이 등장한 1990년으로부터 4년 뒤에 새로운 기술이 출연하게 되는데 사람들은 처음에는 HTML이 등장한 것만으로도 행복했습니다. 

다른 말로는 전자화된 문서를 만들 수 있고 그 문서와 문서가 링크를 통해서 쉽게 이동할 수 있다는 점에도 점만으로도 사람들은 열광했지만 인간의 욕심은 끝이 없다. 

그래서 사람들은 여기에서 만족하지 못하고 곧 불만족을 찾습니다 그래서 4년 뒤에 CSS라는 기술이 등장하는데 CSS 가 등장한 배경은 사람들이 웹페이지를 단지 정보만 갖고 있는 페이지가 아니라 좀 더 아름다운 페이지가 되기를 바랐던 것이죠. 그렇게 해서 디자이너의 언어라고 제가 표현하는 CSS 가 등장하게 됩니다. 그리고 이때를 기점으로 해서 웹 디자인이라는 분야가 출발하게 되었다고도 할 수 있습니다. 



자 그리고 그로부터 1년 뒤 1995년에 자바스크립트라는 기술이 ㄷ으장하는데 이 자바스크립트는 웹페이지는 정적이 줘 1번 화면에 뿌려주면 그걸로 끝입니다. 하지만 우리가 알고 있는 현대적인 웹 애플리케이션들은 사용자가 어떻게 반응하면 웹사이트가 그거에 따라서 지능적으로 움직이게 됩니다. 즉 사람들은 웹페이작 사용자의 동작에 따라 상호 작용하기를 바랐어요. 그래서 등장한 기술이 자바스크립트다라고 생각할 수 있겠습니다. 그리고 우리가 지금까지 배웠던 그걸 한 번 생각해 보세요. 우리가 예제로 삼고 있던 예제에서 만약에 우리가 이미 갖고 있는 웹페이지가 1억 개다 그런데 그 중엣거 h1이라는 태그를 만약에 h2태그로 1억개로 다 바꿔야된다 쉽겠어요? 어렵겠죠. 또 이렇게 웹페이지가 있는 상태에서 웹 페이지를 하나 더 추가 했다. 그럼 어떻게 해야 되나요? 지금까지 있었던 모든 1억개  웹페이지에 글 목록을 다 갱신해 줘야 될 겁니다. 다시 말해서 생산성의 심각한 1개의 도달하게 된다는 겁니다. 그래서 이 웹페이지를 마치 공장처럼 찍어낼 수 있도록 많은 선대 엔지니어들이 고민을 했는데 그 고민의 결과 출연한 기술들이 예를 들면 php 또 자바에 jsp 파이썬의 장고 이러한 기술들은 서로 경쟁관계인데 이러한 기술들을 통해서 바로 웹페이지를 생산하는 생산성이 비약적으로 향상되면서 오늘과 같은 거대한 웹사이트들이 만들어질 수 있게 된 겁니다. 



그리고 데이터가 폭증함에 따라서 그 수많은 데이터를 전문적으로 관리할 필요가 생겼어요. 이를테면 데이터가 유출되더라도 암호화돼서 다른 사람이 원래 내용이 무엇인지 알 수 없게 한다거나 또는 하나의 데이터에 뭐 수천 명이면 수십만 명이 동시에 접속해서 하나의 데이터를 놓고서 어떤 사람들은 쓰려고 하고 어떤 사람은 읽으려고 했을 때 생길 수많은 문제들 또는 1억 개의 데이터가 총 저장되어 있는데 그 데이터에서 필요한 정보를 눈 깜짝할 사이에 찾아내는 그러한 기술들 이러한 것들에 대한 필요성이 대두되면서 이러한 것들을 전문적으로 처리하기 위해 마치 은행과 같은 역할을 하는 그 기술로서 데이터베이스라는 기술이 웹에서도 사용되기 시작하는데 우리 수업에서는 MySQL을 배우겠지만 , MySQL의 경쟁자인 Oracle, MSSQL 이런 기술들이 있습니다. 이것이 우리가 공부하고 있는 이 웹에 전체적인 모습입니다. 

즉 html이 등장한 이후에 이러한 기술들이 아주 다양한 생태계를 만들면서 오늘날의 거대한 웹 좀 더 포괄적으로 정보 기술의 세계가 열린 것이죠.



그럼 어떻게 공부하면 좋을까에 대한 제 생각은 그렇습니다. 여러분이 이 웹이라고 하는 것을 직업으로 선택하려고 하는 것은 아니라면, 여러분은 딱 HTML까지만 보시고 아 코드가 이런 거구나 웹이라는 것은 이런거구나 서버 클라이언트라는 것은 이런 거구나라고 하는 것에 대한 인식만 가지셔도 여러분이 충분히 가장 중요한 것을 알게 된 겁니다. 



공부하시다 보면 힘들고 지치죠. 그러면 뇌를 괴롭히지 마시고 거기서 우리 수업을 내려놓으시고 다시 생활로 돌아가셔도 됩니다. 그리고 생활에 돌아가셔서 여러 가지 문제들을 접하게 될 건데 그 문제가 너무 심각한데 이 문제를 우리가 배웠던 우리가 배울 수 있었던 정보 기술을 통해서 해결할 수 있다면 그때 여러분의 짓누르고 있는 그 문제를 가지고 다시 우리 수업을 찾아오시면 됩니다. 그러면 여러분이 공부하는데 따르는 어려움과 현실의 문제와 씨름하면서 생겨나는 그 절망감을 저울에 놓고 비교했을 때  절망감이 훨씬 크고 여러분이 공부를 통해서 그 절망감을 현저히 낮출 수 있다면 여러분은 공부하는 것이 예전과 같지 않을 겁니다. 그러니까 너무 자기를 괴롭히지 않으셨으면 좋겠고요.



좀 더 전문적으로 또는 직업과 관련해서 여러분이 웹 공부를 하고 있다고 한다면 저는 그렇게 생각합니다. 여기 있는 6개의 기술들은 어떤 것을 먼저 배워야 된다는 순서 같은 건 없어요. 딱 하나 HTMl은 먼저 배워야 됩니다. 그런데 여러분이 만약에 아름다움에 관심이 있는 디자이너다 그럼 여러분은 여기 있는 기술들 중에서 저 CSS라고 적혀있는 기술의 문을 열고 들어가서 거기에다가 본진은 자르시면 됩니다. 또 여러분이 데이터를 관리하는 것에 관심이 있다 그러면 저 MySQL인 데이터베이스라고 하는 것을 하는 문을 열고 들어가서 거기에서 진지를 구축하면 됩니다. 이런 식으로 접근하시면 돼요. 이 모든 것들이 자기 성향에 따라서 여러분이 선호할 만한 여러분이 덜 괴로울 만한 입구들이 있기 때문에 이렇게 말씀을 드리는 거고요. 그다음에 그 입구를 찾아서 자기의 전문성을 발전시킬 때 항상 염두하실 것은 자기의 전문성이라고 생각되지 않는 부분에 대한 교양을 접하는 것을 게을리하지 않으셨으면 좋겠어요. 



그리고 어떤 분야 건 자기가 일정 부분 이상의 심도 있는 내용을 알고 있는 분야는 아무리 노력해도 그 실력이 느는 것이 눈에 잘 보이지 않는다는 사실을 알게 됐는데요. 우리는 그러한 상태에 있을 때 슬럼프라는 심리 상태를 갖게 된 게 아닐까 생각이 듭니다.



무튼 여러분들이 공부하시는 게 많이 힘드시겠지만, 어떻게 공부하는 게 좋을 것인가는 자기의 상황에 따라서 자신이 주체적으로 선택하셔야죠



제가 이런 얘기를 드리는 이유는 여러분의 선택의 결과에 영향을 미치려고 하는 것이 아니라 여러분에게 생각에 제로 중의 하나를 제공해 드릴 수 있지 않을까 라는 생각에서 드린 이야기니까 참고만 하시고 흘려들으시면 되겠습니다.

